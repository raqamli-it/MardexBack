version: '3'

services:
  web:
    build: .
    env_file:
      - .env
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && daphne -b 0.0.0.0 -p 8000 config.asgi:application"
    volumes:
      - .:/Mardex
      - static_volume:/Mardex/staticfiles
      - media_volume:/Mardex/mediafiles
    ports:
      - "8021:8000"
    depends_on:
      - mardex_db
      - redis
    restart: always

  mardex_db:
    image: postgis/postgis:17-3.5
    environment:
      POSTGRES_DB: mardex
      POSTGRES_USER: user_mardex
      POSTGRES_PASSWORD: password_mardex
    ports:
      - "5436:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user_mardex -d mardex" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    ports:
      - "6372:6379"
    volumes:
      - redis_data:/data
    restart: always

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data:








#version: '3'
#
#services:
#  web:
#    build: .
#    env_file:
#      - .env
#    command: sh -c "python manage.py migrate && daphne -b 0.0.0.0 -p 8000 config.asgi:application"
#    volumes:
#      - .:/Mardex
#      - static_volume:/Mardex/staticfiles
#      - media_volume:/Mardex/mediafiles
#    ports:
#      - "8021:8000"
#    depends_on:
#      - mardex_db
#      - redis
#    restart: always
#
#  mardex_db:
#    image: postgres:latest
#    environment:
#      POSTGRES_DB: mardex
#      POSTGRES_USER: user_mardex
#      POSTGRES_PASSWORD: password_mardex
#    ports:
#      - "5436:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    restart: always
#
#
#  redis:
#    image: redis:alpine
#    ports:
#      - "6372:6379"
#    volumes:
#      - redis_data:/data
#    restart: always
#
#volumes:
#  postgres_data:
#  static_volume:
#  media_volume:
#  redis_data:
